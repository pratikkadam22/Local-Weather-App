{"ast":null,"code":"var _jsxFileName = \"H:\\\\PSU\\\\Spring\\\\react-frontend\\\\appen-weather\\\\src\\\\components\\\\UserComponent.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DayCard from './DayCard';\nconst USERS_REST_API_URL = \"http://localhost:8080/api/getWeather\";\n\nclass UserComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      latitude: '',\n      longitude: '',\n      time: '',\n      isSubmitted: false,\n      weatherData: []\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      axios.post(USERS_REST_API_URL, {\n        'latitude': this.state.latitude,\n        'longitude': this.state.longitude,\n        'time': this.state.time\n      }).then(response => {\n        if (response.data != null) {\n          this.setState({\n            weatherData: response.data\n          });\n          console.log(this.state.weatherData);\n          console.log(\"kadam\");\n        }\n      });\n    };\n\n    this.formatDayCards = () => {\n      if (this.state.isSubmitted) {\n        return this.state.weatherData.map((reading, index) => /*#__PURE__*/React.createElement(DayCard, {\n          reading: reading,\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 67\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, \"Press the above button to get Weather data\");\n    };\n  }\n\n  componentDidMount() {\n    let self = this;\n    navigator.geolocation.getCurrentPosition(function (position) {\n      self.setState({\n        latitude: position.coords.latitude.toString(),\n        longitude: position.coords.longitude.toString()\n      });\n      self.setState({\n        time: Math.round(new Date().getTime() / 1000).toString()\n      });\n      self.setState({\n        isSubmitted: true\n      });\n    });\n  }\n\n  render() {\n    if (!this.state.isSubmitted) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, \"Weather Data\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        style: {\n          display: 'flex'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: \"btn\",\n        style: {\n          flex: '3'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"display-1 jumbotron\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, \"4-Day Forecast.\"), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"display-5 text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, \"New York, US\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, \"Press the button to get weather report\")));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, \"Weather Data\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        style: {\n          display: 'flex'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        className: \"btn\",\n        style: {\n          flex: '3'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"display-1 jumbotron\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, \"4-Day Forecast.\"), /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"display-5 text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, \"New York, US\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, this.formatDayCards())));\n    }\n  }\n\n}\n\nexport default UserComponent;","map":{"version":3,"sources":["H:/PSU/Spring/react-frontend/appen-weather/src/components/UserComponent.js"],"names":["React","Component","axios","DayCard","USERS_REST_API_URL","UserComponent","state","latitude","longitude","time","isSubmitted","weatherData","onSubmit","e","preventDefault","post","then","response","data","setState","console","log","formatDayCards","map","reading","index","componentDidMount","self","navigator","geolocation","getCurrentPosition","position","coords","toString","Math","round","Date","getTime","render","display","flex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport DayCard from './DayCard'\r\n\r\nconst USERS_REST_API_URL = \"http://localhost:8080/api/getWeather\"\r\nclass UserComponent extends Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props)\r\n    //     this.state = this.initialState;\r\n    //  }\r\n\r\n    state = {\r\n        latitude: '',\r\n        longitude: '',\r\n        time: '',\r\n        isSubmitted: false,\r\n        weatherData: []\r\n    }\r\n\r\n    componentDidMount (){\r\n        let self = this;\r\n        navigator.geolocation.getCurrentPosition(function(position) {\r\n            self.setState({ latitude: position.coords.latitude.toString(),\r\n                longitude: position.coords.longitude.toString() });\r\n            self.setState({ time: Math.round((new Date()).getTime() / 1000).toString()});\r\n            self.setState({isSubmitted: true})\r\n        });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.post(USERS_REST_API_URL, {'latitude':this.state.latitude,\r\n                                        'longitude':this.state.longitude,\r\n                                        'time':this.state.time}).then(response => {\r\n            if (response.data != null) {\r\n                this.setState({ weatherData: response.data})\r\n                console.log(this.state.weatherData);\r\n                console.log(\"kadam\")\r\n            }\r\n        });\r\n    }\r\n\r\n    formatDayCards = () => {\r\n        if(this.state.isSubmitted){\r\n            return this.state.weatherData.map((reading, index) => <DayCard reading={reading} key={index} />)\r\n        }\r\n        return (<div>Press the above button to get Weather data</div>)\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.isSubmitted) {\r\n            return (\r\n                <div>\r\n                    <h1 className = \"text-center\">Weather Data</h1>\r\n                    <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\r\n                    <input \r\n                        type=\"submit\"\r\n                        value=\"Submit\"\r\n                        className=\"btn\"\r\n                        style={{flex: '3'}} />\r\n                </form>\r\n                <div className=\"container\">\r\n                <h1 className=\"display-1 jumbotron\">4-Day Forecast.</h1>\r\n                <h5 className=\"display-5 text-muted\">New York, US</h5>\r\n                <div>Press the button to get weather report</div>\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <h1 className = \"text-center\">Weather Data</h1>\r\n                    <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\r\n                    <input \r\n                        type=\"submit\"\r\n                        value=\"Submit\"\r\n                        className=\"btn\"\r\n                        style={{flex: '3'}} />\r\n                </form>\r\n                <div className=\"container\">\r\n                <h1 className=\"display-1 jumbotron\">4-Day Forecast.</h1>\r\n                <h5 className=\"display-5 text-muted\">New York, US</h5>\r\n                    <div className=\"row justify-content-center\">\r\n                    {this.formatDayCards()}\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default UserComponent;"]},"metadata":{},"sourceType":"module"}