{"ast":null,"code":"var _jsxFileName = \"H:\\\\PSU\\\\Spring\\\\react-frontend\\\\appen-weather\\\\src\\\\components\\\\GraphTitle.js\";\nimport React from 'react';\n\nvar moment = require('moment');\n/**\r\n * Component for rendering the Day and Date as the title of the graph\r\n * \r\n * @component\r\n */\n\n\nconst GraphTitle = props => {\n  const {\n    time\n  } = props;\n  let newDate = new Date();\n  const weekday = time * 1000;\n  newDate.setTime(weekday);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"alert alert-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Click on a day above to get its respective 24-hour graph\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 106\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, moment(newDate).format('dddd'), \", \", moment(newDate).format('MMMM Do')));\n};\n\nGraphTitle.propTypes = {\n  /**\r\n   * Time which is parsed and used as the title for the graph\r\n   */\n  time: PropTypes.number.isRequired\n};\nexport default GraphTitle;","map":{"version":3,"sources":["H:/PSU/Spring/react-frontend/appen-weather/src/components/GraphTitle.js"],"names":["React","moment","require","GraphTitle","props","time","newDate","Date","weekday","setTime","format","propTypes","PropTypes","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,MAAIE,OAAO,GAAG,IAAIC,IAAJ,EAAd;AACA,QAAMC,OAAO,GAAGH,IAAI,GAAG,IAAvB;AACAC,EAAAA,OAAO,CAACG,OAAR,CAAgBD,OAAhB;AACA,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACJ;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEADI,eAC6F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD7F,eAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,MAAM,CAACK,OAAD,CAAN,CAAgBI,MAAhB,CAAuB,MAAvB,CADL,QACuCT,MAAM,CAACK,OAAD,CAAN,CAAgBI,MAAhB,CAAuB,SAAvB,CADvC,CAFI,CAAR;AAOH,CAZD;;AAcAP,UAAU,CAACQ,SAAX,GAAuB;AACnB;AACJ;AACA;AACIN,EAAAA,IAAI,EAAEO,SAAS,CAACC,MAAV,CAAiBC;AAJJ,CAAvB;AAOA,eAAeX,UAAf","sourcesContent":["import React from 'react'\r\nvar moment = require('moment')\r\n\r\n/**\r\n * Component for rendering the Day and Date as the title of the graph\r\n * \r\n * @component\r\n */\r\nconst GraphTitle = (props) => {\r\n    const { time } = props;\r\n    let newDate = new Date();\r\n    const weekday = time * 1000\r\n    newDate.setTime(weekday)\r\n    return (<div>\r\n        <h4 className=\"alert alert-success\">Click on a day above to get its respective 24-hour graph</h4><br />\r\n        <h3>\r\n            {moment(newDate).format('dddd')}, {moment(newDate).format('MMMM Do')}\r\n        </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nGraphTitle.propTypes = {\r\n    /**\r\n     * Time which is parsed and used as the title for the graph\r\n     */\r\n    time: PropTypes.number.isRequired\r\n}\r\n\r\nexport default GraphTitle;"]},"metadata":{},"sourceType":"module"}