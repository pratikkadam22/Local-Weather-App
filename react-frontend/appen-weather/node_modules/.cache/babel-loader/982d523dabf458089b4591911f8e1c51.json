{"ast":null,"code":"var _jsxFileName = \"H:\\\\PSU\\\\Spring\\\\react-frontend\\\\appen-weather\\\\src\\\\components\\\\UserComponent.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst USERS_REST_API_URL = \"http://localhost:8080/api/addUser\";\n\nclass UserComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      latitude: '',\n      longitude: '',\n      time: '',\n      metric: '',\n      imperial: ''\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        time: Math.round(new Date().getTime() / 1000).toString()\n      });\n      axios.post(USERS_REST_API_URL, {\n        'latitude': this.state.latitude,\n        'longitude': this.state.longitude,\n        'time': this.state.time\n      }).then(response => {\n        if (response.data != null) {\n          console.log(response.data);\n          this.setState({\n            location: ''\n          });\n          this.setState({\n            metric: response.data.metric\n          });\n          this.setState({\n            imperial: response.data.imperial\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    let self = this;\n    navigator.geolocation.getCurrentPosition(function (position) {\n      self.setState({\n        latitude: position.coords.latitude.toString(),\n        longitude: position.coords.longitude.toString()\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"Weather Data\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"location\",\n      style: {\n        flex: '10',\n        padding: '5px'\n      },\n      placeholder: \"Current location by default...\",\n      value: this.state.title,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn\",\n      style: {\n        flex: '1'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default UserComponent;","map":{"version":3,"sources":["H:/PSU/Spring/react-frontend/appen-weather/src/components/UserComponent.js"],"names":["React","Component","axios","USERS_REST_API_URL","UserComponent","state","latitude","longitude","time","metric","imperial","onSubmit","e","preventDefault","setState","Math","round","Date","getTime","toString","post","then","response","data","console","log","location","componentDidMount","self","navigator","geolocation","getCurrentPosition","position","coords","render","display","flex","padding","title","onChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst USERS_REST_API_URL = \"http://localhost:8080/api/addUser\"\r\nclass UserComponent extends Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props)\r\n    //     this.state = this.initialState;\r\n    //  }\r\n\r\n    state = {\r\n        latitude: '',\r\n        longitude: '',\r\n        time: '',\r\n        metric: '',\r\n        imperial: ''\r\n    }\r\n\r\n    componentDidMount (){\r\n        let self = this;\r\n        navigator.geolocation.getCurrentPosition(function(position) {\r\n            self.setState({ latitude: position.coords.latitude.toString(),\r\n                longitude: position.coords.longitude.toString() });\r\n        });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ time: Math.round((new Date()).getTime() / 1000).toString()})\r\n        axios.post(USERS_REST_API_URL, {'latitude':this.state.latitude,\r\n                                        'longitude':this.state.longitude,\r\n                                        'time':this.state.time}).then(response => {\r\n            if (response.data != null) {\r\n                console.log(response.data)\r\n                this.setState({ location: '' });\r\n                this.setState({ metric: response.data.metric })\r\n                this.setState({ imperial: response.data.imperial })                \r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className = \"text-center\">Weather Data</h1>\r\n                <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"location\" \r\n                    style={{ flex: '10', padding: '5px'}}\r\n                    placeholder=\"Current location by default...\"\r\n                    value={this.state.title}\r\n                    onChange={this.onChange}\r\n                    />\r\n                <input \r\n                    type=\"submit\"\r\n                    value=\"Submit\"\r\n                    className=\"btn\"\r\n                    style={{flex: '1'}} />\r\n            </form>\r\n            <div>\r\n                {/* <h6>\r\n                    {this.state.users.metric}\r\n                </h6> */}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserComponent;"]},"metadata":{},"sourceType":"module"}