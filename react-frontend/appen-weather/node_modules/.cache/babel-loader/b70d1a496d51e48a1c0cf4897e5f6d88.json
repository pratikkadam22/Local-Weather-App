{"ast":null,"code":"var _jsxFileName = \"H:\\\\PSU\\\\Spring\\\\react-frontend\\\\appen-weather\\\\src\\\\components\\\\UserComponent.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst USERS_REST_API_URL = \"http://localhost:8080/api/getWeather\";\n\nclass UserComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      latitude: '',\n      longitude: '',\n      time: '',\n      weatherData: []\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      axios.post(USERS_REST_API_URL, {\n        'latitude': this.state.latitude,\n        'longitude': this.state.longitude,\n        'time': this.state.time\n      }).then(response => {\n        if (response.data != null) {\n          this.setState({\n            weatherData: response.data\n          }); // console.log(response.data['0']['unit'])\n\n          console.log(this.state.weatherData);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    let self = this;\n    navigator.geolocation.getCurrentPosition(function (position) {\n      self.setState({\n        latitude: position.coords.latitude.toString(),\n        longitude: position.coords.longitude.toString()\n      });\n      self.setState({\n        time: Math.round(new Date().getTime() / 1000).toString()\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Weather Data\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn\",\n      style: {\n        flex: '3'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, this.state.weatherData.map((d, index) => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 32\n        }\n      }, \"temperature: \", d.current['temp']);\n    }))));\n  }\n\n}\n\nexport default UserComponent;","map":{"version":3,"sources":["H:/PSU/Spring/react-frontend/appen-weather/src/components/UserComponent.js"],"names":["React","Component","axios","USERS_REST_API_URL","UserComponent","state","latitude","longitude","time","weatherData","onSubmit","e","preventDefault","post","then","response","data","setState","console","log","componentDidMount","self","navigator","geolocation","getCurrentPosition","position","coords","toString","Math","round","Date","getTime","render","display","flex","map","d","index","current"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAG,sCAA3B;;AACA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAOlCI,KAPkC,GAO1B;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,SAAS,EAAE,EAFP;AAGJC,MAAAA,IAAI,EAAE,EAHF;AAIJC,MAAAA,WAAW,EAAE;AAJT,KAP0B;;AAAA,SAuBlCC,QAvBkC,GAuBtBC,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;AACAV,MAAAA,KAAK,CAACW,IAAN,CAAWV,kBAAX,EAA+B;AAAC,oBAAW,KAAKE,KAAL,CAAWC,QAAvB;AACC,qBAAY,KAAKD,KAAL,CAAWE,SADxB;AAEC,gBAAO,KAAKF,KAAL,CAAWG;AAFnB,OAA/B,EAEyDM,IAFzD,CAE8DC,QAAQ,IAAI;AACtE,YAAIA,QAAQ,CAACC,IAAT,IAAiB,IAArB,EAA2B;AACvB,eAAKC,QAAL,CAAc;AAAER,YAAAA,WAAW,EAAEM,QAAQ,CAACC;AAAxB,WAAd,EADuB,CAEvB;;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWI,WAAvB;AACH;AACJ,OARD;AASH,KAlCiC;AAAA;;AAclCW,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,IAAI,GAAG,IAAX;AACAC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AACxDJ,MAAAA,IAAI,CAACJ,QAAL,CAAc;AAAEX,QAAAA,QAAQ,EAAEmB,QAAQ,CAACC,MAAT,CAAgBpB,QAAhB,CAAyBqB,QAAzB,EAAZ;AACVpB,QAAAA,SAAS,EAAEkB,QAAQ,CAACC,MAAT,CAAgBnB,SAAhB,CAA0BoB,QAA1B;AADD,OAAd;AAEAN,MAAAA,IAAI,CAACJ,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAEoB,IAAI,CAACC,KAAL,CAAY,IAAIC,IAAJ,EAAD,CAAaC,OAAb,KAAyB,IAApC,EAA0CJ,QAA1C;AAAR,OAAd;AACH,KAJD;AAKH;;AAeDK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAG,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAM,MAAA,QAAQ,EAAE,KAAKtB,QAArB;AAA+B,MAAA,KAAK,EAAE;AAAEuB,QAAAA,OAAO,EAAE;AAAX,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,KAAK,EAAC,QAFV;AAGI,MAAA,SAAS,EAAC,KAHd;AAII,MAAA,KAAK,EAAE;AAACC,QAAAA,IAAI,EAAE;AAAP,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFJ,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK7B,KAAL,CAAWI,WAAX,CAAuB0B,GAAvB,CAA2B,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACtC,0BAAO;AAAG,QAAA,GAAG,EAAEA,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA6BD,CAAC,CAACE,OAAF,CAAU,MAAV,CAA7B,CAAP;AACH,KAFA,CADL,CADJ,CATA,CADJ;AAmBH;;AAxDiC;;AA2DtC,eAAelC,aAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst USERS_REST_API_URL = \"http://localhost:8080/api/getWeather\"\r\nclass UserComponent extends Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props)\r\n    //     this.state = this.initialState;\r\n    //  }\r\n\r\n    state = {\r\n        latitude: '',\r\n        longitude: '',\r\n        time: '',\r\n        weatherData: []\r\n    }\r\n\r\n    componentDidMount (){\r\n        let self = this;\r\n        navigator.geolocation.getCurrentPosition(function(position) {\r\n            self.setState({ latitude: position.coords.latitude.toString(),\r\n                longitude: position.coords.longitude.toString() });\r\n            self.setState({ time: Math.round((new Date()).getTime() / 1000).toString()});\r\n        });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.post(USERS_REST_API_URL, {'latitude':this.state.latitude,\r\n                                        'longitude':this.state.longitude,\r\n                                        'time':this.state.time}).then(response => {\r\n            if (response.data != null) {\r\n                this.setState({ weatherData: response.data})\r\n                // console.log(response.data['0']['unit'])\r\n                console.log(this.state.weatherData);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className = \"text-center\">Weather Data</h1>\r\n                <form onSubmit={this.onSubmit} style={{ display: 'flex' }}>\r\n                <input \r\n                    type=\"submit\"\r\n                    value=\"Submit\"\r\n                    className=\"btn\"\r\n                    style={{flex: '3'}} />\r\n            </form>\r\n            <div>\r\n                <h6>\r\n                    {this.state.weatherData.map((d, index) => {\r\n                        return <p key={index}>temperature: {d.current['temp']}</p>\r\n                    })}\r\n                </h6>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserComponent;"]},"metadata":{},"sourceType":"module"}